// <auto-generated />
using DealsManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DealsManagement.Migrations
{
    [DbContext(typeof(AddDbContext))]
    partial class AddDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DealsManagement.Models.Domain.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Deals");
                });

            modelBuilder.Entity("DealsManagement.Models.Domain.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HotelId"));

                    b.Property<int>("DealId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("HotelId");

                    b.HasIndex("DealId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("DealsManagement.Models.Domain.Deal", b =>
                {
                    b.OwnsOne("DealsManagement.Models.Domain.VideoInfo", "Video", b1 =>
                        {
                            b1.Property<int>("DealId")
                                .HasColumnType("integer");

                            b1.Property<string>("AltText")
                                .HasColumnType("text");

                            b1.Property<string>("Path")
                                .HasColumnType("text");

                            b1.HasKey("DealId");

                            b1.ToTable("Deals");

                            b1.ToJson("Video");

                            b1.WithOwner()
                                .HasForeignKey("DealId");
                        });

                    b.Navigation("Video");
                });

            modelBuilder.Entity("DealsManagement.Models.Domain.Hotel", b =>
                {
                    b.HasOne("DealsManagement.Models.Domain.Deal", "Deal")
                        .WithMany("Hotels")
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal");
                });

            modelBuilder.Entity("DealsManagement.Models.Domain.Deal", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
